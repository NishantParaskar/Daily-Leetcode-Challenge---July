class Solution {
    int M=1e9+7;
public:
    int numberOfUniqueGoodSubsequences(string binary) {
        int n=binary.size();
        vector<long long>dp(n+1,0);
        int prev_z=0,prev_o=0;
        int i=1;
        for(;i<=n && binary[i-1]=='0';i++);
        if(i>n) return 1;
        dp[i]=1;
        prev_o=i-1;bool zero_flag=i>1;
        for(i++;i<=n;i++){
            dp[i]=2*dp[i-1];
            if(binary[i-1]-'0')
                dp[i]-=dp[prev_o],prev_o=i-1;
            else
                dp[i]-=dp[prev_z],prev_z=i-1, zero_flag=true;
            if(dp[i]<0)
                dp[i]+=M;
            dp[i]%=M;
        }
        return (dp[n]+zero_flag)%M;
        
        
    }
};