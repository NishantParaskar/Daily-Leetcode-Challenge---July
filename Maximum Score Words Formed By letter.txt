class Solution {
public:
    void backtrack(vector<string>&words,vector<int>&score,vector<int>&counts,vector<int>&actualCount,int pos,int temp,int &ans){
        for(int i=0;i<26;i++)
            if(actualCount[i]>counts[i]){
                return;
            }
        ans =max(ans,temp);
        for(int i=pos;i<words.size();i++){
            for(auto& c: words[i]){
                actualCount[c-'a']++;
                temp+=score[c-'a'];
            }
            backtrack(words,score,counts,actualCount,i+1,temp,ans);
            for(auto & c:words[i]){
                
                actualCount[c-'a']--;
                temp-=score[c-'a'];
            }
        }
    }
    int maxScoreWords(vector<string>& words, vector<char>& letters, vector<int>& score) {
        vector<int>counts(26,0),actualCount(26,0);
        for(auto & c:letters){
            counts[c-'a']++;
        }
        int ans=0;
        backtrack(words,score,counts,actualCount,0,0,ans);
        return ans;
    }
};